generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  fullName  String   @map("full_name")
  cpf       String   @unique
  phone     String
  company   String
  email     String   @unique
  password  String
  role      Role     @default(TRADER)
  createdAt DateTime @default(now()) @map("created_at")
  
  bookings     Booking[]
  adminActions AdminAction[]
  
  @@map("users")
}

model Station {
  id        String        @id @default(cuid())
  number    Int           @unique
  status    StationStatus @default(ACTIVE)
  createdAt DateTime      @default(now()) @map("created_at")
  
  bookings  Booking[]
  
  @@map("stations")
}

model Booking {
  id           String        @id @default(cuid())
  userId       String        @map("user_id")
  stationId    String        @map("station_id")
  seatId       String?       @map("seat_id")
  seatNumber   Int?          @map("seat_number")
  date         DateTime
  startTime    String        @map("start_time")
  endTime      String        @map("end_time")
  cpf          String
  fullName     String        @map("full_name")
  status       BookingStatus @default(ACTIVE)
  cancelledAt  DateTime?     @map("cancelled_at")
  cancelReason String?       @map("cancel_reason")
  createdAt    DateTime      @default(now()) @map("created_at")
  
  user      User    @relation(fields: [userId], references: [id])
  station   Station @relation(fields: [stationId], references: [id])
  
  @@unique([stationId, seatNumber, date, startTime, endTime, status], name: "unique_active_seat_booking")
  @@map("bookings")
}

enum Role {
  TRADER
  ADMIN
}

enum StationStatus {
  ACTIVE
  MAINTENANCE
  INACTIVE
}

enum BookingStatus {
  ACTIVE
  CANCELLED
}

model AdminAction {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  action    String
  targetId  String   @map("target_id")
  reason    String?
  createdAt DateTime @default(now()) @map("created_at")
  
  user User @relation(fields: [userId], references: [id])
  
  @@map("admin_actions")
}